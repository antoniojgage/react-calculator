{"version":3,"sources":["components/Display/Display.jsx","components/Key/Key.jsx","components/Keypad/Keypad.jsx","components/Calculator/Calculator.jsx","components/App/App.jsx","index.js"],"names":["Display","_ref","displayValue","react_default","a","createElement","className","defaultProps","Key","handleKeyPress","keyAction","keyType","keyValue","keyClass","concat","onClick","onKeyPress","event","Keypad","operators","callOperator","numbers","setOperator","updateDisplay","numberKeys","map","number","iterator","components_Key_Key","key","operatorKeys","operator","Calculator","state","selectedOperator","storedValue","componentWillMount","document","addEventListener","_this","componentWillUnmount","removeEventListener","_this$state","forEach","_this$state2","updateStoredValue","parseInt","toString","setState","_this$state3","value","_this$state4","includes","substr","length","_this$state5","this","components_Display_Display","components_Keypad_Keypad","Component","App","props","name","components_Calculator_Calculator","ReactDOM","render","components_App_App","getElementById"],"mappings":"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","file":"static/js/main.305835c2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Display.css';\n\nconst Display = ({ displayValue }) => (\n  <div className=\"display-container\">\n    <p className=\"display-value\">\n      {displayValue}\n    </p>\n  </div>\n);\n\nDisplay.propTypes = { displayValue: PropTypes.string.isRequired }\n\nDisplay.defaultProps = { displayValue: 'default' }\n\nexport default Display;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Key.css';\n\nconst Key = ({ handleKeyPress, keyAction, keyType, keyValue }) => {\n  const keyClass = `key-container ${keyType}`;\n\n  return (\n    <div\n      className={keyClass}\n      onClick={() => keyAction(keyValue)}\n      onKeyPress={(event) => handleKeyPress(event)}\n    >\n      <p className=\"key-value\">\n        {keyValue}\n      </p>\n    </div>\n  );\n}\n\nKey.propTypes = {\n  handleKeyPress: PropTypes.func.isRequired,\n  keyAction: PropTypes.func.isRequired,\n  keyType: PropTypes.string.isRequired,\n  keyValue: PropTypes.string.isRequired,\n}\n\nKey.defaultProps = {\n  keyType: 'default',\n  keyAction: 'default',\n}\n\nexport default Key;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Keypad.css';\n\nimport Key from '../Key/Key';\nimport './Keypad.css';\n\nconst Keypad = ({ operators, callOperator, handleKeyPress, numbers, setOperator, updateDisplay }) => {\n\n  const numberKeys = numbers.map((number, iterator) => (\n    <Key\n      handleKeyPress={handleKeyPress}\n      key={`${number}${iterator}`}\n      keyType=\"number-key\"\n      keyValue={number}\n      keyAction={updateDisplay}\n    />\n  ));\n\n  const operatorKeys = operators.map((operator, iterator) => (\n    <Key\n      handleKeyPress={handleKeyPress}\n      key={`${operator}${iterator}`}\n      keyType=\"operator-key\"\n      keyValue={operator}\n      keyAction={setOperator}\n    />\n  ));\n\n  return (\n    <div className=\"keypad-container\">\n      <div className=\"numbers-container\">\n        {numberKeys}\n      </div>\n      <div className=\"operators-container\">\n        {operatorKeys}\n      </div>\n      <div className=\"submit-container\">\n        <Key\n          handleKeyPress={handleKeyPress}\n          keyType=\"submit-key\"\n          keyValue=\"=\"\n          keyAction={callOperator}\n        />\n      </div>\n    </div >\n  );\n}\n\nKeypad.propTypes = {\n  callOperator: PropTypes.func.isRequired,\n  handleKeyPress: PropTypes.func.isRequired,\n  numbers: PropTypes.array.isRequired,\n  operators: PropTypes.array.isRequired,\n  setOperator: PropTypes.func.isRequired,\n  updateDisplay: PropTypes.func.isRequired\n}\n\nKeypad.defaultProps = {\n  numbers: [],\n  operators: [],\n}\n\nexport default Keypad;","import React, { Component } from 'react';\nimport './Calculator.css';\n\nimport Display from '../Display/Display';\nimport Keypad from '../Keypad/Keypad';\nimport './Calculator.css';\n\nclass Calculator extends Component {\n  state = {\n    displayValue: '0',\n    numbers: ['9', '8', '7', '6', '5', '4', '3', '2', '1', '.', '0', 'ce'],\n    operators: ['/', 'x', '-', '+'],\n    selectedOperator: '',\n    storedValue: '',\n  }\n\n  componentWillMount = () => {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount = () => {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress = (event) => {\n    const { numbers, operators } = this.state;\n\n    if (event.key === 'Backspace') this.updateDisplay(event, 'ce');\n    if (event.key === 'Enter' || event.key === '=') this.callOperator(event);\n\n    numbers.forEach((number) => {\n      if (event.key === number) {\n        this.updateDisplay(event, number);\n      }\n    });\n\n    operators.forEach((operator) => {\n      if (event.key === operator) {\n        this.setOperator(event, operator);\n      }\n    });\n  }\n\n  callOperator = () => {\n    let { displayValue, selectedOperator, storedValue } = this.state;\n    const updateStoredValue = displayValue;\n\n    displayValue = parseInt(displayValue, 10);\n    storedValue = parseInt(storedValue, 10);\n\n    switch (selectedOperator) {\n      case '+':\n        displayValue = storedValue + displayValue;\n        break;\n      case '-':\n        displayValue = storedValue - displayValue;\n        break;\n      case 'x':\n        displayValue = storedValue * displayValue;\n        break;\n      case '/':\n        displayValue = storedValue / displayValue;\n        break;\n      default:\n        displayValue = '0';\n    }\n\n    displayValue = displayValue.toString();\n    selectedOperator = '';\n    if (displayValue === 'NaN' || displayValue === 'Infinity') displayValue = '0';\n\n    this.setState({ displayValue, selectedOperator, storedValue: updateStoredValue });\n  }\n\n  handleKeyPress = event => {\n    const { numbers, operators } = this.state;\n\n    if (event.key === 'Backspace') this.updateDisplay('ce');\n    if (event.key === 'Enter' || event.key === '=') this.callOperator();\n\n    numbers.forEach(number => {\n      if (event.key === number) this.updateDisplay(number);\n    });\n\n    operators.forEach(operator => {\n      if (event.key === operator) this.setOperator(operator);\n    });\n  }\n\n  setOperator = value => {\n    let { displayValue, selectedOperator, storedValue } = this.state;\n\n    if (selectedOperator === '') {\n      storedValue = displayValue;\n      displayValue = '0';\n      selectedOperator = value;\n    } else {\n      selectedOperator = value;\n    }\n\n    this.setState({ displayValue, selectedOperator, storedValue });\n  }\n\n  updateDisplay = value => {\n    let { displayValue } = this.state;\n\n    if (value === '.' && displayValue.includes('.')) value = '';\n\n    if (value === 'ce') {\n      displayValue = displayValue.substr(0, displayValue.length - 1);\n      if (displayValue === '') displayValue = '0';\n    } else {\n      displayValue === '0' ? displayValue = value : displayValue += value;\n    }\n\n    this.setState({ displayValue });\n  }\n\n  render() {\n    const { displayValue, numbers, operators } = this.state;\n\n    return (\n      <div className=\"calculator-container\">\n        <Display displayValue={displayValue} />\n        <Keypad\n          handleKeyPress={this.handleKeyPress}\n          operators={operators}\n          callOperator={this.callOperator}\n          numbers={numbers}\n          setOperator={this.setOperator}\n          updateDisplay={this.updateDisplay}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React from \"react\";\nimport Calculator from \"../Calculator/Calculator\";\nimport \"./App.css\";\n\nconst App = props => (\n  <div className=\"app-container\">\n    <h1>{props.name}</h1>\n    <Calculator />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}